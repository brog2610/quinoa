/*!
  \page      walker_example_skewnormal Walker: Integrating the skew-normal SDE
  \tableofcontents

This example runs [walker](walker_doc.html) to integrate the skew-normal
SDE using constant coefficients.

\section walker_example_skewnormal_control Control file

\code{.py}
title "Example problem"

walker

  term  10.0    # Max time
  dt    0.001   # Time step size
  npar  10000   # Number of particles
  ttyi  1000    # TTY output interval

  rngs
    mkl_r250 seed 1 end
  end

  skew-normal
    depvar m
    init zero
    coeff const
    ncomp 2
    T 1.0 3.5 end
    sigma 0.2 0.5 end
    lambda 100.0 -50.0 end
    rng mkl_r250
  end

  statistics
   interval 2
   <m1m1> <m2m2>
  end

  pdfs
    interval  10
    filetype  txt
    policy    overwrite
    centering elem
    format    scientific
    precision 4
    p1( M1 : 1.0e-2 )
    p2( M2 : 1.0e-2 )
  end
end
\endcode

\section walker_example_skewnormal_run Example run on 8 CPUs
\code{.py}
./charmrun +p8 Main/walker -v -c ../../tmp/test.q -u 0.9
\endcode

\section walker_example_skewnormal_output Output
\verbatim
Running on 8 processors:  Main/walker -v -c ../../tmp/test.q -u 0.9
charmrun>  /usr/bin/setarch x86_64 -R  mpirun -np 8  Main/walker -v -c ../../tmp/test.q -u 0.9
Charm++> Running on MPI version: 3.0
Charm++> level of thread support used: MPI_THREAD_SINGLE (desired: MPI_THREAD_SINGLE)
Charm++> Running in non-SMP mode: numPes 8
Converse/Charm++ Commit ID: 1a4f4bc
CharmLB> Load balancer assumes all CPUs are same.
Charm++> Running on 1 unique compute nodes (8-way SMP).
Charm++> cpu topology info is gathered in 0.002 seconds.

      ,::,`                                                            `.
   .;;;'';;;:                                                          ;;#
  ;;;@+   +;;;  ;;;;;,   ;;;;. ;;;;;, ;;;;      ;;;;   `;;;;;;:        ;;;
 :;;@`     :;;' .;;;@,    ,;@, ,;;;@: .;;;'     .;+;. ;;;@#:';;;      ;;;;'
 ;;;#       ;;;: ;;;'      ;:   ;;;'   ;;;;;     ;#  ;;;@     ;;;     ;+;;'
.;;+        ;;;# ;;;'      ;:   ;;;'   ;#;;;`    ;#  ;;@      `;;+   .;#;;;.
;;;#        :;;' ;;;'      ;:   ;;;'   ;# ;;;    ;# ;;;@       ;;;   ;# ;;;+
;;;#        .;;; ;;;'      ;:   ;;;'   ;# ,;;;   ;# ;;;#       ;;;:  ;@  ;;;
;;;#        .;;' ;;;'      ;:   ;;;'   ;#  ;;;;  ;# ;;;'       ;;;+ ;',  ;;;@
;;;+        ,;;+ ;;;'      ;:   ;;;'   ;#   ;;;' ;# ;;;'       ;;;' ;':::;;;;
`;;;        ;;;@ ;;;'      ;:   ;;;'   ;#    ;;;';# ;;;@       ;;;:,;+++++;;;'
 ;;;;       ;;;@ ;;;#     .;.   ;;;'   ;#     ;;;;# `;;+       ;;# ;#     ;;;'
 .;;;      :;;@  ,;;+     ;+    ;;;'   ;#      ;;;#  ;;;      ;;;@ ;@      ;;;.
  ';;;    ;;;@,   ;;;;``.;;@    ;;;'   ;+      .;;#   ;;;    :;;@ ;;;      ;;;+
   :;;;;;;;+@`     ';;;;;'@    ;;;;;, ;;;;      ;;+    +;;;;;;#@ ;;;;.   .;;;;;;
     .;;#@'         `#@@@:     ;::::; ;::::      ;@      '@@@+   ;:::;    ;::::::
    :;;;;;;.      __      __        .__   __
  .;@+@';;;;;;'  /  \    /  \_____  |  | |  | __ ___________
    `     '#''@` \   \/\/   /\__  \ |  | |  |/ // __ \_  __ \
                  \        /  / __ \|  |_|    <\  ___/|  | \/
                   \__/\  /  (____  /____/__|_ \\___  >__|
                        \/        \/          \/    \/                       

                                 < ENVIRONMENT >                                
                                 ------ o ------                          

 * Build environment:
 --------------------
     Hostname                       : karman
     Executable                     : walker
     Version                        : 0.1
     Release                        : LA-CC-XX-XXX
     Revision                       : bea2f6fda8138ef3a3944c81b4e6a3f2d528f95e
     CMake build type               : Debug
     Asserts                        : on (turn off: CMAKE_BUILD_TYPE=RELEASE)
     Exception trace                : on (turn off: CMAKE_BUILD_TYPE=RELEASE)
     MPI C++ wrapper                : /opt/openmpi/1.8/clang/system/bin/mpicxx
     Underlying C++ compiler        : /usr/bin/clang++-3.5
     Build date                     : Wed Feb  4 10:39:51 MST 2015

 * Run-time environment:
 -----------------------
     Date, time                     : Wed Feb  4 11:37:25 2015
     Work directory                 : /home/jbakosi/code/quinoa/build/clang
     Executable (rel. to work dir)  : Main/walker
     Command line arguments         : '-v -c ../../tmp/test.q -u 0.9'
     Output                         : verbose (quiet: omit -v)
     Control file                   : ../../tmp/test.q
     Parsed control file            : success


                                   < FACTORY >                                  
                                   ---- o ----                            

 * Particle properties data layout policy (CMake: LAYOUT):
 ---------------------------------------------------------
     particle-major                

 * Registered differential equations:
 ------------------------------------
     Unique equation types          : 8
     With all policy combinations   : 18

     Legend: equation name : supported policies

     Policy codes:
      * i: initialization policy: R-raw, Z-zero
      * c: coefficients policy: C-const, J-jrrj

     Beta                           : i:RZ, c:CJ
     Diagonal Ornstein-Uhlenbeck    : i:RZ, c:C
     Dirichlet                      : i:RZ, c:C
     Gamma                          : i:RZ, c:C
     Generalized Dirichlet          : i:RZ, c:C
     Ornstein-Uhlenbeck             : i:RZ, c:C
     Skew-Normal                    : i:RZ, c:C
     Wright-Fisher                  : i:RZ, c:C


                                   < PROBLEM >                                  
                                   ---- o ----                            

 * Title: Example problem
 ------------------------

 * Differential equations integrated (1):
 ----------------------------------------
   < Skew-Normal >
     kind                           : stochastic
     dependent variable             : m
     initialization policy          : Z
     coefficients policy            : C
     start offset in particle array : 0
     number of components           : 2
     random number generator        : MKL R250
     coeff T [2]                    : { 1 3.5 }
     coeff sigma [2]                : { 0.2 0.5 }
     coeff lambda [2]               : { 100 -50 }

 * Output filenames:
 -------------------
     Statistics                     : stat.txt
     PDF                            : pdf

 * Discretization parameters:
 ----------------------------
     Number of time steps           : 18446744073709551615
     Terminate time                 : 10
     Initial time step size         : 0.001

 * Output intervals:
 -------------------
     TTY                            : 1000
     Statistics                     : 2
     PDF                            : 10

 * Statistical moments and distributions:
 ----------------------------------------
     Estimated statistical moments  : <M1> <M2> <m1m1> <m2m2> 
     PDFs                           : p1(M1:0.01) p2(M2:0.01) 
     PDF output file type           : txt
     PDF output file policy         : overwrite
     PDF output file centering      : elem
     Text floating-point format     : scientific
     Text precision in digits       : 4

 * Load distribution:
 --------------------
     Virtualization [0.0...1.0]     : 0.9
     Load (number of particles)     : 10000
     Number of processing elements  : 8
     Number of work units           : 80 (79*125+125)

 * Time integration: Differential equations testbed
 --------------------------------------------------
     Legend: it - iteration count
              t - time
             dt - time step size
            ETE - estimated time elapsed (h:m:s)
            ETA - estimated time for accomplishment (h:m:s)
            out - output-saved flags (S: statistics, P: PDFs)
     
      it             t            dt        ETE        ETA   out
 ---------------------------------------------------------------
    1000  1.000000e+00  1.000000e-03  000:00:03  000:00:35  SP
    2000  2.000000e+00  1.000000e-03  000:00:07  000:00:30  SP
    3000  3.000000e+00  1.000000e-03  000:00:11  000:00:26  SP
    4000  4.000000e+00  1.000000e-03  000:00:15  000:00:22  SP
    5000  5.000000e+00  1.000000e-03  000:00:19  000:00:19  SP
    6000  6.000000e+00  1.000000e-03  000:00:22  000:00:15  SP
    7000  7.000000e+00  1.000000e-03  000:00:26  000:00:11  SP
    8000  8.000000e+00  1.000000e-03  000:00:30  000:00:07  SP
    9000  9.000000e+00  1.000000e-03  000:00:34  000:00:03  SP
   10000  1.000000e+01  1.000000e-03  000:00:38  000:00:00  SP

 Normal finish, maximum time reached: 10.000000

 * Timers (h:m:s):
 -----------------
     Initial conditions                                                : 0:0:0
     Migration of global-scope data                                    : 0:0:0
     Total runtime                                                     : 0:0:38


[Partition 0][Node 0] End of program
\endverbatim

\section walker_example_skewnormal_results Results

\image html skew_mom.svg
\image html skew_pdf.svg

The left figure shows the first two moments indicating convergence to a
statistically stationary state. The right one shows the estimated PDFs with
their analytical solution. See DiffEq/SkewNormal.h for the analytical solution.

<hr>
<div><small>
<em>Page last updated:</em> Wed 04 Feb 2015 11:59:27 AM MST
<em>Copyright 2012-2015, Jozsef Bakosi.</em>
</small></div>
*/
