//******************************************************************************
/*!
  \file      src/Inciter/partitioner.ci
  \author    J. Bakosi
  \date      Tue 01 Dec 2015 09:32:28 AM MST
  \copyright 2012-2015, Jozsef Bakosi.
  \brief     Charm++ module interface file for the chare partitioner group
  \details   Charm++ module interface file for the chare partitioner group used
             to perform mesh partitioning.
*/
//******************************************************************************

module partitioner {

  extern module conductor;

  namespace inciter {

    // Partitioner is templated so that the same code (parameterized by the type
    // given by the template arguments, HostProxy) can be generated for
    // different types of proxies. All possible specializations must be listed
    // below to ensure that Charm++ generates corect code.

    // List all possible specializations of templated chare to instantiate
    // registration and delivery of code for the individual specializations

    // Will specialize partitioner for inciter's Conductor
    chare Partitioner< CProxy_Conductor >;

    template< class HostProxy >
    group Partitioner {
      entry Partitioner( HostProxy& host );
      entry void partition( int nchare );
    };

  } // inciter::

}
