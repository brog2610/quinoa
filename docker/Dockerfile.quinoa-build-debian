################################################################################
# vim: filetype=dockerfile:
#
# \file      docker/Dockerfile.quinoa-build-debian
# \author    J. Bakosi
# \copyright 2012-2015, Jozsef Bakosi, 2016, Los Alamos National Security, LLC.
# \brief     Dockerfile for a simple dynamic build of Quinoa on Debian
# \date      Sun 12 Jun 2016 03:58:12 PM MDT
#
################################################################################

# Dockerfile for a simple dynamic build of Quinoa on Debian Linux using the
# native (system-wide compiler and MPI wrappers).
#
# We start from the Debian/testing Linux distribution and install all possible
# prerequisites, then build the required but missing third-party libraries,
# build the code and test.
#
# This docker image is intended to test and demonstrate one of the simplest way
# of building Quinoa. It creates dynamically built executables which require
# runtime libraries. This container is not cleaned at the end, it contains the
# full operating system, compilers, libraries, source code, documentation, etc.,
# and is intended as a complete development environment using the system-wide
# GNU compilers and OpenMPI.
#
# This container does not contain proprietary software and thus the container
# image can be publicly distributed.
#
# All prerequisites for building the container are downloaded from the internet.

FROM debian:testing
MAINTAINER Jozsef Bakosi <jbakosi@lanl.gov>

# From behind LANL firewall
ENV http_proxy http://proxyout.lanl.gov:8080/
ENV https_proxy https://proxyout.lanl.gov:8080/

# Install system-wide prerequisites
RUN apt-get update -y && apt-get install -y debian-keyring debian-archive-keyring wget
RUN echo "deb http://ftp.us.debian.org/debian testing main \n deb http://security.debian.org testing/updates main" > /etc/apt/sources.list
RUN apt-get update -y && apt-get install -y m4 sudo git cmake gfortran gcc g++ gmsh libpugixml-dev libpstreams-dev libboost-all-dev libblas-dev liblapack-dev liblapacke-dev libhdf5-dev libhdf5-openmpi-dev libhypre-dev

# Switch to bash for the rest of the build
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Create a non-root user 'quinoa' that can sudo without password
RUN mkdir /home/quinoa && groupadd -r quinoa -g 433 && useradd -u 431 -r -g quinoa -d /home/quinoa -s /sbin/nologin -c "Quinoa quinoa" quinoa && echo "quinoa:quinoa" | chpasswd && adduser quinoa sudo && echo "quinoa ALL = NOPASSWD : ALL" > /etc/sudoers.d/quinoa && chmod 0440 /etc/sudoers.d/quinoa && chown -R quinoa:quinoa /home/quinoa
# Switch default user to 'quinoa' and change default work directory
USER quinoa
WORKDIR /home/quinoa
# Set default interactive shell
CMD ["/bin/bash"]

# Clone quinoa
RUN git clone https://github.com/quinoacomputing/quinoa.git
# Build TPLs
RUN cd quinoa && mkdir -p tpl/build && cd tpl/build && cmake .. && make -sj$((`cat /proc/cpuinfo | grep MHz | wc -l`/4))
# Build & test
RUN cd quinoa && mkdir -p build && cd build && cmake -DCMAKE_CXX_FLAGS=-Werror ../src && make -sj$((`cat /proc/cpuinfo | grep MHz | wc -l`/4)) && ../script/run_tests.sh $((`cat /proc/cpuinfo | grep MHz | wc -l`/4))
