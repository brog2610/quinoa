# vim: filetype=dockerfile:
#
# Author:    J. Bakosi
# Date:      Tue 26 Apr 2016 08:07:50 AM MDT
# Copyright: 2012-2016, Jozsef Bakosi.

FROM debian:testing
MAINTAINER Jozsef Bakosi <jbakosi@lanl.gov>

# From behind LANL firewall
ENV http_proxy http://proxyout.lanl.gov:8080/
ENV https_proxy https://proxyout.lanl.gov:8080/

# Install system-wide prerequisites
RUN apt-get -y update && apt-get install -y debian-keyring debian-archive-keyring wget
RUN echo "deb http://ftp.us.debian.org/debian testing main non-free contrib \n deb http://security.debian.org testing/updates main contrib non-free" > /etc/apt/sources.list
RUN apt-get -y update && apt-get install -y sudo m4 git cmake gfortran gcc g++ libpugixml-dev libpstreams-dev zlib1g-dev libaec-dev gmsh

# Install OpenMPI
ADD openmpi-1.10.2.tar.bz2 /install
RUN cd /install/openmpi-1.10.2 && ./configure --enable-static --prefix=/opt/openmpi && make -sj`cat /proc/cpuinfo | grep MHz | wc -l` install
ENV PATH /opt/openmpi/bin:$PATH
ENV LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH
ENV MANPATH /opt/openmpi/share/man:$MANPATH

# Remove /install - no more installs after this line
RUN rm -rf /install

# Install more system-wide prerequisites. This command pulls in libibverbs-dev,
# which OpenMPI would want to link with if available before the OpenMPI build,
# which would break the all-static build.
RUN apt-get -y install libboost-all-dev libblas-dev liblapack-dev liblapacke-dev libhdf5-dev libhdf5-openmpi-dev

# Switch to bash for the rest of the build
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Create a non-root user 'quinoa' that can sudo without password
RUN mkdir /home/quinoa && groupadd -r quinoa -g 433 && useradd -u 431 -r -g quinoa -d /home/quinoa -s /sbin/nologin -c "Quinoa quinoa" quinoa && echo "quinoa:quinoa" | chpasswd && adduser quinoa sudo && echo "quinoa ALL = NOPASSWD : ALL" > /etc/sudoers.d/quinoa && chmod 0440 /etc/sudoers.d/quinoa && chown -R quinoa:quinoa /home/quinoa
# Switch default user to 'quinoa' and change default work directory
USER quinoa
WORKDIR /home/quinoa
# Set default interactive shell
CMD ["/bin/bash"]

# Clone quinoa
RUN git clone https://github.com/jbakosi/quinoa.git
# Build TPLs
RUN cd quinoa && mkdir -p tpl/build && cd tpl/build && cmake -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_C_COMPILER=mpicc -DCMAKE_Fortran_COMPILER=mpif90 -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=off .. && make -sj`cat /proc/cpuinfo | grep MHz | wc -l`
# Build & test
RUN cd quinoa && mkdir -p build && cd build && cmake -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_C_COMPILER=mpicc -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=off ../src && make -sj`cat /proc/cpuinfo | grep MHz | wc -l` && ../script/run_tests.sh

# Clean everything not needed to run quinoa
#RUN cd quinoa && rm -rf .git doc docker src tool tpl/CMakeLists.txt tpl/build tpl/src
